{"version":3,"sources":["views/GetReadyView/PreparationCard/PreparationCard.module.css","elements/RadioButton/RadioButton.module.css","views/InstructionView/Navigation.module.css","assets/bell.mp3","assets/start.mp3","elements/Card.tsx","utils/math.tsx","views/GetReadyView/DoseCard/index.tsx","views/GetReadyView/PreparationCard/index.tsx","views/GetReadyView/index.tsx","elements/RadioButton/index.tsx","views/InstructionView/Navigation.tsx","views/InstructionView/Stopwatch/index.tsx","views/InstructionView/ProgressDonutChartButton/DonutChart.jsx","views/InstructionView/ProgressDonutChartButton/DonutNeedle.jsx","views/InstructionView/ProgressDonutChartButton/TextDisplay.jsx","views/InstructionView/ProgressDonutChartButton/DonutProgressContainer.jsx","views/InstructionView/ProgressDonutChartButton/index.tsx","views/InstructionView/StepList/index.tsx","views/InstructionView/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","views/InstructionView/StepList/StepsList.module.css","elements/Card.module.css","views/GetReadyView/DoseCard/DoseCard.module.css","views/InstructionView/Stopwatch/Stopwatch.module.css","views/InstructionView/ProgressDonutChartButton/DonutProgress.module.css","views/InstructionView/InstructionView.module.css"],"names":["module","exports","CardContainer","children","className","styles","flexCardContainer","Card","flexCardListItem","flexCard","getBeanWeightAndBrewWaterVolume","bean","water","ratio","beanWeight","waterVolume","roundToInteger","input","Math","round","toString","DoseCard","methodDetails","setBeanWeight","setWater","methodRef","useRef","animateRef","selector","gsap","utils","timelineRef","grindSize","handleChange","useCallback","event","value","Number","target","id","result","useLayoutEffect","current","timeline","to","rotation","duration","ease","ref","formWrapper","formInCircle","formLabel","numberInput","type","name","onChange","PreparationCard","coffeeNeeded","waterNeeded","subtleHeading","list","listItem","waterTemperature","tools","map","t","index","GetReadyView","method","setMethod","chosenMethodDetails","handleRadioButtonChange","item","defaultCoffeeInGram","defaultWaterInMl","brewMethods","selected","btnContainer","hiddenInput","checked","roundToggleButton","btnLabel","htmlFor","RadioButton","Navigation","onClose","navigation","navButton","onClick","title","href","learn","rel","Stopwatch","time","minutes","floor","slice","seconds","clock","DonutChart","pieData","pieArc","pie","d","fill","data","pieChart","DonutNeedle","pieNeedle","TextDisplay","currentStep","isRunning","untilNextStep","textToShow","useMemo","currentData","fractionOfWater","Text","countDownTimer","textAnchor","verticalAnchor","width","svgDiameter","window","innerWidth","innerHeight","pieRadius","pieOuterMargin","pieInnerMargin","arc","innerRadius","outerRadius","needleArc","dataValue","needleValue","step","ClickableCircle","button","cx","cy","r","DonutProgressContainer","totalDuration","reduce","pre","cur","needleData","i","push","needlePie","sort","dataPie","height","transform","bellAudio","require","buttonClickedAudio","ProgressDonutChartButton","steps","stepsLeft","setIsRunning","audioRef","Audio","autoplay","useEffect","src","default","StepsList","scrollable","heading","timeGuide","activeText","instruction","FractionIndicator","fraction","total","unit","largeDigit","InstructionView","isReady","setIsReady","useState","setTime","setCurrentStep","setUntilNextStep","addedWater","setAddedWater","calculatedSteps","replace","$0","$1","waterAfterCurrentStep","length","interval","setInterval","prevTime","prevStep","clearInterval","slider","close","flexDirectionSwichContainer","upAndLeft","bottomAndRight","App","find","obj","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.477197b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtleHeading\":\"PreparationCard_subtleHeading__3I8px\",\"list\":\"PreparationCard_list__3gMvm\",\"listItem\":\"PreparationCard_listItem__2fSSe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnContainer\":\"RadioButton_btnContainer__3Cm0B\",\"hiddenInput\":\"RadioButton_hiddenInput__277Mw\",\"roundToggleButton\":\"RadioButton_roundToggleButton__3P-ux\",\"btnLabel\":\"RadioButton_btnLabel__kbciV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__3JMeS\",\"title\":\"Navigation_title__1I0yt\",\"navButton\":\"Navigation_navButton__244cM\"};","export default __webpack_public_path__ + \"static/media/bell.e775700b.mp3\";","export default __webpack_public_path__ + \"static/media/start.c5edceb4.mp3\";","import styles from \"./Card.module.css\";\n\nexport const CardContainer = ({ children }: { children: any }) => (\n  <div className={styles.flexCardContainer}>{children}</div>\n);\n\nexport const Card = ({\n  children,\n  className,\n}: {\n  children: any;\n  className?: string;\n}) => (\n  <li className={`${styles.flexCardListItem} ${className}`}>\n    <div className={styles.flexCard}>{children}</div>\n  </li>\n);\n","export function getBeanWeightAndBrewWaterVolume({\n  bean,\n  water,\n  ratio,\n}: {\n  bean?: number;\n  water?: number;\n  ratio: number;\n}) {\n  const beanWeight = bean ? bean : water! / ratio;\n  const waterVolume = water ? water : bean! * ratio;\n  return { beanWeight, waterVolume };\n}\n\nexport function roundToInteger(input: number) {\n  return Math.round(input).toString();\n}\n","import React, { useRef, useLayoutEffect, useCallback } from \"react\";\nimport { gsap } from \"gsap\";\nimport { TypeBrewMethod } from \"../../../types/TypeBrewMethod\";\nimport { Card } from \"../../../elements/Card\";\nimport { getBeanWeightAndBrewWaterVolume } from \"../../../utils/math\";\nimport { roundToInteger } from \"../../../utils/math\";\nimport styles from \"./DoseCard.module.css\";\n\nexport const DoseCard = ({\n  methodDetails,\n  beanWeight,\n  water,\n  setBeanWeight,\n  setWater,\n}: {\n  methodDetails: TypeBrewMethod;\n  beanWeight: number;\n  water: number;\n  setBeanWeight: Function;\n  setWater: Function;\n}) => {\n  const methodRef = useRef(methodDetails);\n  const animateRef = useRef<HTMLDivElement>(null);\n  const selector = gsap.utils.selector(animateRef);\n  const timelineRef = useRef<GSAPTimeline>();\n\n  const ratio = methodDetails.ratio;\n  const grindSize = methodDetails.grindSize;\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const value = Number(event.target.value);\n      if (event.target.id === \"ground_coffee\") {\n        const result = getBeanWeightAndBrewWaterVolume({\n          bean: value,\n          ratio: ratio,\n        });\n        setBeanWeight(value);\n        setWater(result.waterVolume);\n      } else {\n        const result = getBeanWeightAndBrewWaterVolume({\n          water: value,\n          ratio: ratio,\n        });\n        setBeanWeight(result.beanWeight);\n        setWater(value);\n      }\n    },\n    [ratio, setBeanWeight, setWater]\n  );\n\n  useLayoutEffect(() => {\n    if (methodDetails !== methodRef.current)\n      timelineRef.current = gsap\n        .timeline()\n        .to(selector(\".toTilt\"), {\n          rotation: 25,\n          duration: 0.3,\n        })\n        .to(selector(\".toTilt\"), {\n          rotation: 0,\n          duration: 1,\n          ease: \"back\",\n        });\n    methodRef.current = methodDetails;\n  }, [methodDetails, methodRef, selector]);\n\n  return (\n    <Card>\n      <div id=\"dose-section\">\n        <h2 className=\"heading\">Decide on dose</h2>\n\n        <div ref={animateRef} className=\"spaced-container\">\n          <div className={styles.formWrapper}>\n            <div className={` ${styles.formInCircle} toTilt`}>{grindSize}</div>\n            <label className={styles.formLabel}>Grind Size</label>\n          </div>\n\n          <div className={styles.formWrapper}>\n            <div className={` ${styles.formInCircle} toTilt`}>\n              <input\n                className={styles.numberInput}\n                type=\"number\"\n                name=\"ground_coffee\"\n                id=\"ground_coffee\"\n                value={roundToInteger(beanWeight)}\n                onChange={handleChange}\n              />{\" \"}\n              g\n            </div>\n            <label className={styles.formLabel}>Ground Coffee</label>\n          </div>\n\n          <div className={styles.formWrapper}>\n            <div className={` ${styles.formInCircle} toTilt`}>\n              <input\n                className={styles.numberInput}\n                type=\"number\"\n                name=\"water\"\n                id=\"water\"\n                value={roundToInteger(water)}\n                onChange={handleChange}\n              />{\" \"}\n              ml\n            </div>\n            <label className={styles.formLabel}>Water</label>\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n};\n","import { Card } from \"../../../elements/Card\";\nimport { TypeBrewMethod } from \"../../../types/TypeBrewMethod\";\nimport { roundToInteger } from \"../../../utils/math\";\nimport styles from \"./PreparationCard.module.css\";\n\nexport const PreparationCard = ({\n  methodDetails,\n  coffeeNeeded,\n  waterNeeded,\n}: {\n  methodDetails: TypeBrewMethod;\n  coffeeNeeded: number;\n  waterNeeded: number;\n}) => {\n  return (\n    <Card>\n      <div id=\"ready_page\">\n        <h2 className=\"heading\">Prepare</h2>\n        <h4 className={styles.subtleHeading}>You will need ...</h4>\n        <ul className={styles.list}>\n          <li className={styles.listItem}>\n            {methodDetails.grindSize} ground coffee:{\" \"}\n            {roundToInteger(coffeeNeeded)} g\n          </li>\n          <li className={styles.listItem}>\n            {methodDetails.waterTemperature} Water:{\" \"}\n            {roundToInteger(waterNeeded)} ml\n          </li>\n          {methodDetails.tools.map((t, index) => (\n            <li key={index} className={styles.listItem}>\n              {t}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Card>\n  );\n};\n","import brewMethods from \"../../data/BrewMethods.json\";\nimport { TypeBrewMethod } from \"../../types/TypeBrewMethod\";\nimport { Card, CardContainer } from \"../../elements/Card\";\nimport { RadioButton } from \"../../elements/RadioButton\";\nimport { DoseCard } from \"./DoseCard\";\nimport { PreparationCard } from \"./PreparationCard\";\n\nexport const GetReadyView = ({\n  method,\n  setMethod,\n  chosenMethodDetails,\n  beanWeight,\n  setBeanWeight,\n  water,\n  setWater,\n}: {\n  method: string;\n  setMethod: Function;\n  chosenMethodDetails: TypeBrewMethod;\n  beanWeight: number;\n  setBeanWeight: Function;\n  water: number;\n  setWater: Function;\n}) => {\n  const handleRadioButtonChange = (item: TypeBrewMethod) => {\n    setMethod(item.name);\n    setBeanWeight(item.defaultCoffeeInGram);\n    setWater(item.defaultWaterInMl);\n  };\n  return (\n    <>\n      <CardContainer>\n        <Card>\n          <h2 className=\"heading\">Choose a brew method</h2>\n          <div className=\"spaced-container\">\n            {brewMethods.map((item) =>\n              RadioButton(item, method, handleRadioButtonChange)\n            )}\n          </div>\n        </Card>\n        <DoseCard\n          methodDetails={chosenMethodDetails!}\n          beanWeight={beanWeight}\n          water={water}\n          setBeanWeight={setBeanWeight}\n          setWater={setWater}\n        />\n        <PreparationCard\n          methodDetails={chosenMethodDetails!}\n          coffeeNeeded={beanWeight}\n          waterNeeded={water}\n        />\n      </CardContainer>\n    </>\n  );\n};\n","import { TypeBrewMethod } from \"../../types/TypeBrewMethod\";\nimport styles from \"./RadioButton.module.css\";\nexport const RadioButton = (\n  item: TypeBrewMethod,\n  selected: string,\n  handleChange: Function\n) => {\n  return (\n    <div className={styles.btnContainer} key={item.name}>\n      <input\n        className={styles.hiddenInput}\n        id={item.name}\n        type=\"radio\"\n        onChange={() => handleChange(item)}\n        checked={item.name === selected}\n      />\n      <div className={styles.roundToggleButton}>\n        <label className={styles.btnLabel} htmlFor={item.name}>\n          {item.name}\n        </label>\n      </div>\n    </div>\n  );\n};\n","import { MouseEventHandler } from \"react\";\nimport { TypeBrewMethod } from \"../../types/TypeBrewMethod\";\nimport styles from \"./Navigation.module.css\";\nexport const Navigation = ({\n  methodDetails,\n  onClose,\n}: {\n  methodDetails: TypeBrewMethod;\n  onClose: MouseEventHandler;\n}) => (\n  <div className={styles.navigation}>\n    <button className={styles.navButton} onClick={onClose}>\n      Close\n    </button>\n    <h3 className={styles.title}>{methodDetails.name}</h3>\n    <a\n      className={styles.navButton}\n      href={methodDetails.learn}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      Learn\n    </a>\n  </div>\n);\n","import styles from \"./Stopwatch.module.css\";\nexport const Stopwatch = ({ time }: { time: number }) => {\n  const minutes = (\"0\" + Math.floor((time / 60) % 60)).toString().slice(-2);\n  const seconds = (\"0\" + Math.floor(time % 60)).toString().slice(-2);\n  return (\n    <div id=\"stopwatch\">\n      <div className={styles.clock}>\n        <span>{minutes}:</span>\n        <span>{seconds}</span>\n      </div>\n\n      {/* <div id=\"stopwatch_controls\"> */}\n      {/*   <button */}\n      {/*     className={ */}\n      {/*       isRunning */}\n      {/*         ? `${styles.onOffButton} ${styles.active}` */}\n      {/*         : styles.onOffButton */}\n      {/*     } */}\n      {/*     onClick={ */}\n      {/*       isRunning ? () => setIsRunning(false) : () => setIsRunning(true) */}\n      {/*     } */}\n      {/*   > */}\n      {/*     Go */}\n      {/*   </button> */}\n      {/* </div> */}\n    </div>\n  );\n};\n","import styles from \"./DonutProgress.module.css\";\nexport const DonutChart = ({ pieData, pieArc, pie }) =>\n  pie(pieData).map((d) => {\n    const type = d.data.type;\n    let fill;\n    if (type === \"pour\") {\n      fill = \"steelblue\";\n    } else if (type === \"wait\") {\n      fill = \"#3a3a3c\";\n    } else if (type === \"swirl\" || type === \"stir\") {\n      fill = \"darkgoldenrod\";\n    } else {\n      fill = \"darkcyan\";\n    }\n    return (\n      <g className={styles.pieChart} key={d.index}>\n        <path fill={fill} d={pieArc(d)} />\n      </g>\n    );\n  });\n","import styles from \"./DonutProgress.module.css\";\nexport const DonutNeedle = ({ pieData, pieArc, pie, time }) =>\n  pie(pieData).map((d) => {\n    let fill;\n    if (d.index === time) {\n      fill = \"goldenrod\";\n    } else if (d.index < time) {\n      fill = \"darkgoldenrod\";\n    } else {\n      fill = \"none\";\n    }\n    return (\n      <g className={styles.pieNeedle} key={d.index}>\n        <path fill={fill} d={pieArc(d)} />\n      </g>\n    );\n  });\n","import { useMemo } from \"react\";\nimport { Text } from \"@visx/text\";\nimport styles from \"./DonutProgress.module.css\";\nimport { roundToInteger } from \"../../../utils/math\";\n\nexport const TextDisplay = ({\n  data,\n  currentStep,\n  isRunning,\n  untilNextStep,\n}) => {\n  const textToShow = useMemo(() => {\n    const currentData = data[currentStep - 1];\n    if (!isRunning) return \"Push & Start\";\n    if (currentData.type === \"pour\") {\n      return `Pour until ${roundToInteger(currentData.fractionOfWater)}ml`;\n    } else if (currentData.type === \"end\") {\n      return `Push & Done`;\n    } else {\n      return `${currentData.type} ${untilNextStep}sec`;\n    }\n  }, [data, currentStep, untilNextStep, isRunning]);\n\n  return (\n    <Text\n      className={styles.countDownTimer}\n      textAnchor=\"middle\"\n      verticalAnchor=\"middle\"\n      width={30}\n    >\n      {textToShow}\n    </Text>\n  );\n};\n","import { useMemo } from \"react\";\nimport { arc, pie } from \"d3\";\nimport { DonutChart } from \"./DonutChart\";\nimport { DonutNeedle } from \"./DonutNeedle\";\nimport { TextDisplay } from \"./TextDisplay\";\nimport styles from \"./DonutProgress.module.css\";\n\nconst svgDiameter =\n  window.innerWidth < window.innerHeight\n    ? window.innerWidth * 0.6\n    : window.innerHeight * 0.6;\nconst pieRadius = svgDiameter * 0.5;\n\nconst pieOuterMargin = pieRadius * 0.9;\nconst pieInnerMargin = pieRadius * 0.75;\nconst pieArc = arc().innerRadius(pieInnerMargin).outerRadius(pieOuterMargin);\n\nconst needleSize = 10;\nconst needleArc = arc()\n  .outerRadius(pieInnerMargin)\n  .innerRadius(pieInnerMargin - needleSize);\n\nconst dataValue = (d) => d.duration;\nconst needleValue = (d) => d.step;\n\nconst ClickableCircle = () => (\n  <circle\n    className={styles.button}\n    cx=\"0\"\n    cy=\"0\"\n    r={pieInnerMargin - needleSize - 3}\n  />\n);\n\nexport const DonutProgressContainer = ({\n  time,\n  data,\n  isRunning,\n  currentStep,\n  untilNextStep,\n}) => {\n  const totalDuration = useMemo(\n    () => data.reduce((pre, cur) => pre + cur.duration, 0),\n    [data]\n  );\n\n  const needleData = [];\n  for (let i = 0; i <= totalDuration; i++) {\n    needleData.push({ step: 1 });\n  }\n\n  const needlePie = useMemo(() => pie().sort(null).value(needleValue), []);\n  const dataPie = useMemo(() => pie().sort(null).value(dataValue), []);\n\n  return (\n    <svg width={svgDiameter} height={svgDiameter}>\n      <g transform={`translate(${pieRadius},${pieRadius})`}>\n        <DonutNeedle\n          time={time}\n          pieData={needleData}\n          pie={needlePie}\n          pieArc={needleArc}\n        />\n        <DonutChart pieData={data} pie={dataPie} pieArc={pieArc} />\n        <ClickableCircle />\n        <TextDisplay\n          data={data}\n          currentStep={currentStep}\n          untilNextStep={untilNextStep}\n          isRunning={isRunning}\n        />\n      </g>\n    </svg>\n  );\n};\n","import { useEffect, useRef } from \"react\";\nimport { Steps } from \"../../../types/TypeBrewMethod\";\nimport { DonutProgressContainer } from \"./DonutProgressContainer\";\n\n// Typescript does not seem to support 'import' of audio files.\nconst bellAudio = require(\"../../../assets/bell.mp3\");\nconst buttonClickedAudio = require(\"../../../assets/start.mp3\");\n\nexport const ProgressDonutChartButton = ({\n  time,\n  steps,\n  currentStep,\n  stepsLeft,\n  untilNextStep,\n  isRunning,\n  setIsRunning,\n}: {\n  time: number;\n  steps: Array<Steps>;\n  currentStep: number;\n  stepsLeft: number;\n  untilNextStep: number;\n  isRunning: boolean;\n  setIsRunning: React.Dispatch<React.SetStateAction<boolean>>;\n}) => {\n  // Initial audio element.\n  const audioRef = useRef<HTMLAudioElement>(new Audio());\n  audioRef.current.autoplay = true;\n\n  useEffect(() => {\n    // Play alert sound while step changes\n    if (stepsLeft > 0 && untilNextStep === 1) {\n      // Typescript requires '.default'\n      audioRef.current.src = bellAudio.default;\n    }\n  }, [stepsLeft, audioRef, untilNextStep]);\n  return (\n    <div\n      id=\"donutProgressChart\"\n      onClick={() => {\n        isRunning ? setIsRunning(false) : setIsRunning(true);\n        // Audio needs to be initiated by user interaction.\n        audioRef.current.src = buttonClickedAudio.default;\n      }}\n    >\n      <DonutProgressContainer\n        time={time}\n        data={steps}\n        isRunning={isRunning}\n        currentStep={currentStep}\n        untilNextStep={untilNextStep}\n      />\n    </div>\n  );\n};\n","import { Steps } from \"../../../types/TypeBrewMethod\";\nimport styles from \"./StepsList.module.css\";\nexport const StepsList = ({\n  steps,\n  currentStep,\n  isRunning,\n}: {\n  steps: Array<Steps>;\n  isRunning: boolean;\n  currentStep: number;\n}) => (\n  <div className={styles.scrollable}>\n    <h4 className={styles.heading}>Steps</h4>\n    <ul className={styles.list}>\n      {!isRunning ? (\n        steps.map((step, index) => (\n          <li className={styles.listItem} key={index}>\n            <span className={styles.timeGuide}>\n              {step.duration} second{step.duration > 1 ? \"s\" : \"\"}\n            </span>\n            <span\n              className={`${styles.instruction} ${\n                index === currentStep - 1 && styles.activeText\n              }\n                  }`}\n            >\n              {step.instruction}\n            </span>\n          </li>\n        ))\n      ) : (\n        <>\n          <li className={styles.listItem}>\n            <span className={styles.timeGuide}>Do</span>\n            <span className={styles.activeText}>\n              {steps[currentStep - 1].instruction}\n            </span>\n          </li>\n          {steps[currentStep] && (\n            <li className={styles.listItem}>\n              <span className={styles.timeGuide}>Next Up</span>\n              <span className={styles.instruction}>\n                {steps[currentStep].instruction}\n              </span>\n            </li>\n          )}\n        </>\n      )}\n    </ul>\n  </div>\n);\n","import { useState, useEffect } from \"react\";\nimport { TypeBrewMethod } from \"../../types/TypeBrewMethod\";\nimport styles from \"./InstructionView.module.css\";\nimport { Navigation } from \"./Navigation\";\nimport { Stopwatch } from \"./Stopwatch\";\nimport { ProgressDonutChartButton } from \"./ProgressDonutChartButton\";\nimport { StepsList } from \"./StepList\";\nimport { roundToInteger } from \"../../utils/math\";\n\nexport const FractionIndicator = ({\n  fraction,\n  total,\n  unit,\n}: {\n  fraction: number;\n  total: number;\n  unit: string;\n}) => (\n  <div className={styles.largeDigit}>{`${roundToInteger(\n    fraction\n  )}/${roundToInteger(total)}${unit}`}</div>\n);\n\nexport const InstructionView = ({\n  methodDetails,\n  water,\n  isReady,\n  setIsReady,\n}: {\n  methodDetails: TypeBrewMethod;\n  water: number;\n  isReady: boolean;\n  setIsReady: Function;\n}) => {\n  const [isRunning, setIsRunning] = useState<boolean>(false);\n  const [time, setTime] = useState<number>(0);\n  const [currentStep, setCurrentStep] = useState<number>(1);\n  const [untilNextStep, setUntilNextStep] = useState<number>(\n    methodDetails.steps[0].duration\n  );\n  const [addedWater, setAddedWater] = useState<number>(0);\n\n  const calculatedSteps = methodDetails.steps.map((step) => ({\n    ...step,\n    fractionOfWater: step.fractionOfWater! * water,\n    instruction: step.instruction.replace(\n      /\\{(\\d\\.?\\d{0,})\\}/g,\n      ($0: string, $1: string) => roundToInteger(+$1 * water)\n    ),\n  }));\n\n  const waterAfterCurrentStep =\n    calculatedSteps[currentStep - 1].fractionOfWater;\n\n  const stepsLeft = calculatedSteps.length - currentStep;\n\n  const resetAll = () => {\n    setIsReady(false);\n    setIsRunning(false);\n    setTime(0);\n    setCurrentStep(1);\n    setUntilNextStep(methodDetails.steps[0].duration);\n    setAddedWater(0);\n  };\n\n  useEffect(() => {\n    if (!isRunning) return;\n\n    let interval: number = 0;\n    interval = window.setInterval(() => {\n      setTime((prevTime) => prevTime + 1);\n      if (untilNextStep > 0) setUntilNextStep(untilNextStep - 1);\n      if (stepsLeft > 0 && untilNextStep === 1) {\n        setCurrentStep((prevStep) => prevStep + 1);\n        setUntilNextStep(calculatedSteps[currentStep].duration);\n        waterAfterCurrentStep && setAddedWater(waterAfterCurrentStep);\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [\n    isRunning,\n    untilNextStep,\n    currentStep,\n    calculatedSteps,\n    stepsLeft,\n    waterAfterCurrentStep,\n  ]);\n  return (\n    <div className={`${styles.slider} ${!isReady && styles.close}`}>\n      <Navigation methodDetails={methodDetails} onClose={resetAll} />\n\n      <div className={styles.flexDirectionSwichContainer}>\n        <div className={styles.upAndLeft}>\n          <Stopwatch time={time} />\n\n          <ProgressDonutChartButton\n            time={time}\n            steps={calculatedSteps}\n            currentStep={currentStep}\n            stepsLeft={stepsLeft}\n            untilNextStep={untilNextStep}\n            isRunning={isRunning}\n            setIsRunning={setIsRunning}\n          />\n        </div>\n\n        <div className={styles.bottomAndRight}>\n          <FractionIndicator fraction={addedWater} total={water} unit=\"ml\" />\n\n          <StepsList\n            isRunning={isRunning}\n            steps={calculatedSteps}\n            currentStep={currentStep}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState, useMemo, useLayoutEffect, useRef } from \"react\";\nimport { GetReadyView } from \"./views/GetReadyView\";\nimport { InstructionView } from \"./views/InstructionView\";\nimport brewMethods from \"./data/BrewMethods.json\";\nimport \"./App.css\";\n\nfunction App() {\n  const [method, setMethod] = useState(\"The Ultimate V60\");\n  const [isReady, setIsReady] = useState<boolean>(false);\n  const chosenMethodDetails = useMemo(\n    () => brewMethods.find((obj) => obj.name === method),\n    [method]\n  );\n  const [beanWeight, setBeanWeight] = useState(\n    chosenMethodDetails!.defaultCoffeeInGram\n  );\n  const [water, setWater] = useState(chosenMethodDetails!.defaultWaterInMl);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"app-title\">Coffee Crush</h1>\n\n      <GetReadyView\n        method={method}\n        setMethod={setMethod}\n        chosenMethodDetails={chosenMethodDetails!}\n        beanWeight={beanWeight}\n        setBeanWeight={setBeanWeight}\n        water={water}\n        setWater={setWater}\n      />\n\n      <InstructionView\n        methodDetails={chosenMethodDetails!}\n        water={water}\n        isReady={isReady}\n        setIsReady={setIsReady}\n      />\n\n      {!isReady && (\n        <button className=\"prime-button\" onClick={() => setIsReady(true)}>\n          Brew\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollable\":\"StepsList_scrollable__2aZ9j\",\"list\":\"StepsList_list__33TY0\",\"listItem\":\"StepsList_listItem__3QnQ6\",\"heading\":\"StepsList_heading__LA-iA\",\"timeGuide\":\"StepsList_timeGuide__2SrtH\",\"instruction\":\"StepsList_instruction__3iTqs\",\"activeText\":\"StepsList_activeText__3Q-4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexCardContainer\":\"Card_flexCardContainer__1klXT\",\"flexCardListItem\":\"Card_flexCardListItem__1HmSY\",\"flexCard\":\"Card_flexCard__1fjIE\",\"flex-card-content\":\"Card_flex-card-content__14qdT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"DoseCard_formWrapper__3u-vA\",\"formInCircle\":\"DoseCard_formInCircle__iPwPI\",\"formLabel\":\"DoseCard_formLabel__1Lxis\",\"numberInput\":\"DoseCard_numberInput__2cxb9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"Stopwatch_clock__3GJKS\",\"onOffButton\":\"Stopwatch_onOffButton__2WMsy\",\"active\":\"Stopwatch_active__2Zo2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pieNeedle\":\"DonutProgress_pieNeedle__GQdWH\",\"pieChart\":\"DonutProgress_pieChart__2T4pF\",\"button\":\"DonutProgress_button__zKX9R\",\"countDownTimer\":\"DonutProgress_countDownTimer__3eee5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"InstructionView_slider__11104\",\"close\":\"InstructionView_close__TVFvd\",\"flexDirectionSwichContainer\":\"InstructionView_flexDirectionSwichContainer__2Kfu4\",\"bottomAndRight\":\"InstructionView_bottomAndRight__GxPDP\",\"upAndLeft\":\"InstructionView_upAndLeft__1sOL_\",\"largeDigit\":\"InstructionView_largeDigit__jWR_P\"};"],"sourceRoot":""}
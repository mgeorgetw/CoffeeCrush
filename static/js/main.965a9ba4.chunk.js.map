{"version":3,"sources":["views/InstructionView/Stopwatch/Stopwatch.module.css","views/InstructionView/StepList/StepsList.module.css","views/InstructionView/DonutProgressChart/DonutProgress.module.css","elements/RadioButton/RadioButton.module.css","assets/bell.mp3","elements/Card.tsx","views/GetReadyView/PreparationCard/index.tsx","utils/math.tsx","views/GetReadyView/DoseCard/index.tsx","views/GetReadyView/index.tsx","elements/RadioButton/index.tsx","views/InstructionView/DonutProgressChart/DonutChart.jsx","views/InstructionView/DonutProgressChart/DonutNeedle.jsx","views/InstructionView/DonutProgressChart/CountDownTimer.jsx","views/InstructionView/DonutProgressChart/DonutProgressContainer.jsx","views/InstructionView/DonutProgressChart/index.tsx","views/InstructionView/StepList/index.tsx","views/InstructionView/Stopwatch/index.tsx","views/InstructionView/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Card","children","className","PreparationCard","methodDetails","coffeeNeeded","waterNeeded","id","grindSize","Math","round","waterTemperature","tools","map","t","index","beanWaterCalculator","bean","water","ratio","calcBean","finalAmount","DoseCard","beanWeight","setBeanWeight","setWater","type","name","value","onChange","event","coffeeInGram","target","result","Number","GetReadyView","method","setMethod","setIsReady","chosenMethodDetails","brewMethods","item","key","label","selected","handleChange","styles","btnContainer","hiddenInput","checked","roundToggleButton","btnLabel","htmlFor","RadioButton","onClick","DonutChart","pieData","pieArc","colorPie","currentStep","d","fill","data","pieChart","DonutNeedle","time","pieNeedle","CountDownTimer","isRunning","untilNextStep","pieRadius","displayText","useMemo","currentData","volume","countDownTimer","textAnchor","x","y","dy","width","window","innerWidth","height","pieOuterMargin","pieInnerMargin","arc","innerRadius","outerRadius","needleArc","dataValue","duration","needleValue","step","SvgRoundButton","cx","cy","r","fx","fy","offset","style","stopColor","stopOpacity","button","DonutProgressContainer","totalDuration","reduce","pre","cur","needleData","i","push","needlePie","pie","sort","transform","bellAudioClip","require","DonutProgressChart","steps","stepsLeft","setIsRunning","audioRef","useRef","Audio","current","autoplay","useEffect","src","default","play","StepsList","scrollable","heading","timeGuide","activeText","instruction","Stopwatch","minutes","floor","toString","slice","seconds","clock","InstructionView","isReady","useState","setTime","setCurrentStep","setUntilNextStep","calculatedSteps","replace","$0","$1","length","interval","setInterval","prevTime","prevOrder","clearInterval","App","find","obj","defaultCoffeeInGram","defaultWaterInMl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.965a9ba4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"onOffButton\":\"Stopwatch_onOffButton__2WMsy\",\"active\":\"Stopwatch_active__2Zo2k\",\"clock\":\"Stopwatch_clock__3GJKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"StepsList_heading__LA-iA\",\"scrollable\":\"StepsList_scrollable__2aZ9j\",\"timeGuide\":\"StepsList_timeGuide__2SrtH\",\"instruction\":\"StepsList_instruction__3iTqs\",\"activeText\":\"StepsList_activeText__3Q-4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pieNeedle\":\"DonutProgress_pieNeedle__97Mgb\",\"pieChart\":\"DonutProgress_pieChart__2_8dM\",\"pieLabel\":\"DonutProgress_pieLabel__3ikD3\",\"button\":\"DonutProgress_button__1FIDb\",\"countDownTimer\":\"DonutProgress_countDownTimer__2pLlE\",\"pieLabelStroke\":\"DonutProgress_pieLabelStroke__2HMjG\",\"legendLabel\":\"DonutProgress_legendLabel__3oc2U\",\"legend\":\"DonutProgress_legend__mbBqN\",\"hideshow\":\"DonutProgress_hideshow__2jgOT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnContainer\":\"RadioButton_btnContainer__3Cm0B\",\"hiddenInput\":\"RadioButton_hiddenInput__277Mw\",\"roundToggleButton\":\"RadioButton_roundToggleButton__3P-ux\",\"btnLabel\":\"RadioButton_btnLabel__kbciV\"};","export default __webpack_public_path__ + \"static/media/bell.e775700b.mp3\";","export const Card = ({\n  children,\n  className,\n}: {\n  children: any;\n  className?: string;\n}) => (\n  <li className={`flex-card-listitem ${className}`}>\n    <div className=\"flex-card\">{children}</div>\n  </li>\n);\n","import { Card } from \"../../../elements/Card\";\nimport { TypeBrewMethod } from \"../../../types/TypeBrewMethod\";\n\nexport const PreparationCard = ({\n  methodDetails,\n  coffeeNeeded,\n  waterNeeded,\n}: {\n  methodDetails: TypeBrewMethod;\n  coffeeNeeded: number;\n  waterNeeded: number;\n}) => {\n  return (\n    <Card>\n      <div id=\"ready_page\">\n        <h2 className={\"heading\"}>Prepare</h2>\n        <h4 className=\"low_key_heading\">You will need ...</h4>\n        <ul className=\"item-lists\">\n          <li className=\"list-item active-text\">\n            {methodDetails.grindSize} ground coffee: {Math.round(coffeeNeeded)}{\" \"}\n            g\n          </li>\n          <li className=\"list-item active-text\">\n            {methodDetails.waterTemperature} Water: {Math.round(waterNeeded)} ml\n          </li>\n          {methodDetails.tools.map((t, index) => (\n            <li key={index} className=\"list-item active-text\">\n              {t}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Card>\n  );\n};\n","export function beanWaterCalculator({\n  bean,\n  water,\n  ratio,\n}: {\n  bean?: number;\n  water?: number;\n  ratio: number;\n}) {\n  const calcBean = bean ? bean : water! / ratio;\n  const finalAmount = water ? water : bean! * ratio;\n  return { calcBean, finalAmount };\n}\n","import React from \"react\";\nimport { Card } from \"../../../elements/Card\";\nimport { beanWaterCalculator } from \"../../../utils/math\";\n\nexport const DoseCard = ({\n  ratio,\n  grindSize,\n  beanWeight,\n  water,\n  setBeanWeight,\n  setWater,\n}: {\n  grindSize: string;\n  ratio: number;\n  beanWeight: number;\n  water: number;\n  setBeanWeight: Function;\n  setWater: Function;\n}) => {\n  const handleWeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const coffeeInGram = event.target.value;\n    const result = beanWaterCalculator({\n      bean: Number(coffeeInGram),\n      ratio: ratio,\n    });\n    setBeanWeight(coffeeInGram);\n    setWater(result.finalAmount);\n  };\n  const handleWaterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const water = event.target.value;\n    const result = beanWaterCalculator({\n      water: Number(water),\n      ratio: ratio,\n    });\n    setBeanWeight(result.calcBean);\n    setWater(water);\n  };\n  return (\n    <Card>\n      <div id=\"dose-section\">\n        <h2 className=\"heading\">Decide on dose</h2>\n        <div className=\"centerSpacedFlexContainer\">\n          <div className=\"info-btn-group\">\n            <div className=\"btn-with-info\">\n              <div className=\"btn-with-info\">{grindSize}</div>\n            </div>\n            <label className=\"info-btn-label\">Grind Size</label>\n          </div>\n\n          <div className=\"info-btn-group\">\n            <div className=\"btn-with-info\">\n              <input\n                className=\"number_input\"\n                type=\"number\"\n                name=\"ground_coffee\"\n                id=\"ground_coffee\"\n                value={Math.round(beanWeight)}\n                onChange={handleWeightChange}\n              />{\" \"}\n              g\n            </div>\n            <label className=\"info-btn-label\">Ground Coffee</label>\n          </div>\n          <div className=\"info-btn-group\">\n            <div className=\"btn-with-info\">\n              <input\n                className=\"number_input\"\n                type=\"number\"\n                name=\"water\"\n                id=\"water\"\n                value={Math.round(water)}\n                onChange={handleWaterChange}\n              />{\" \"}\n              ml\n            </div>\n            <label className=\"info-btn-label\">Water</label>\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n};\n","import { RadioButton } from \"../../elements/RadioButton\";\nimport { Card } from \"../../elements/Card\";\nimport { PreparationCard } from \"./PreparationCard\";\nimport { DoseCard } from \"./DoseCard\";\nimport brewMethods from \"../../data/BrewMethods.json\";\nimport \"../../App.css\";\nimport { TypeBrewMethod } from \"../../types/TypeBrewMethod\";\n\n// TODO: Stopwatch visualization: circular progress bar, real-time pouring suggestions.\n\nexport const GetReadyView = ({\n  method,\n  setMethod,\n  setIsReady,\n  chosenMethodDetails,\n  beanWeight,\n  setBeanWeight,\n  water,\n  setWater,\n}: {\n  method: string;\n  setMethod: Function;\n  isReady: boolean;\n  setIsReady: Function;\n  chosenMethodDetails: TypeBrewMethod;\n  beanWeight: number;\n  setBeanWeight: Function;\n  water: number;\n  setWater: Function;\n}) => {\n  const grindSize = chosenMethodDetails?.grindSize;\n\n  return (\n    <>\n      <Card>\n        <h2 className=\"heading\">Choose a brew method</h2>\n        <div className=\"centerSpacedFlexContainer\">\n          {brewMethods.map((item, index) =>\n            RadioButton(index, item.method, item.method, method, setMethod)\n          )}\n        </div>\n      </Card>\n      <DoseCard\n        ratio={chosenMethodDetails!.ratio}\n        grindSize={grindSize!}\n        beanWeight={beanWeight}\n        water={water}\n        setBeanWeight={setBeanWeight}\n        setWater={setWater}\n      />\n      <PreparationCard\n        methodDetails={chosenMethodDetails!}\n        coffeeNeeded={beanWeight}\n        waterNeeded={water}\n      />\n      <button className=\"prime_button\" onClick={() => setIsReady(true)}>\n        I'm ready\n      </button>\n    </>\n  );\n};\n","import styles from \"./RadioButton.module.css\";\nexport const RadioButton = (\n  key: number,\n  item: string,\n  label: string,\n  selected: string,\n  handleChange: Function\n) => (\n  <div className={styles.btnContainer} key={key}>\n    <input\n      className={styles.hiddenInput}\n      id={item}\n      type=\"radio\"\n      onChange={() => handleChange(item)}\n      checked={item === selected}\n    />\n    <div className={styles.roundToggleButton}>\n      <label className={styles.btnLabel} htmlFor={item}>\n        {label}\n      </label>\n    </div>\n  </div>\n);\n","import styles from \"./DonutProgress.module.css\";\nexport const DonutChart = ({ pieData, pieArc, colorPie, currentStep }) => {\n  return colorPie(pieData).map((d) => {\n    const type = d.data.type;\n    let fill;\n    // if (d.index < currentStep - 1) {\n    //   fill = \"darkgoldenrod\";\n    // } else if (d.index === currentStep - 1) {\n    //   fill = \"goldenrod\";\n    // } else {\n    //   fill = \"darkcyan\";\n    // }\n    if (type === \"pour\") {\n      fill = \"steelblue\";\n    } else if (type === \"wait\") {\n      fill = \"#3a3a3c\";\n    } else if (type === \"swirl\" || type === \"stir\") {\n      fill = \"darkgoldenrod\";\n    } else {\n      fill = \"darkcyan\";\n    }\n    return (\n      <g className={styles.pieChart} key={d.index}>\n        <path fill={fill} d={pieArc(d)} />\n      </g>\n    );\n  });\n};\n","import styles from \"./DonutProgress.module.css\";\nexport const DonutNeedle = ({ pieData, pieArc, colorPie, time }) => {\n  return colorPie(pieData).map((d) => {\n    let fill;\n    if (d.index === time) {\n      fill = \"goldenrod\";\n    } else {\n      fill = \"none\";\n    }\n    return (\n      <g className={styles.pieNeedle} key={d.index}>\n        <path fill={fill} d={pieArc(d)} />\n      </g>\n    );\n  });\n};\n","import { useMemo } from \"react\";\nimport styles from \"./DonutProgress.module.css\";\n\nexport const CountDownTimer = ({\n  data,\n  currentStep,\n  isRunning,\n  untilNextStep,\n  pieRadius,\n}) => {\n  const displayText = useMemo(() => {\n    const currentData = data[currentStep - 1];\n    if (currentData.type === \"pour\") {\n      return [currentData.type, `${currentData.volume}ml`];\n    } else {\n      return [currentData.type, `${untilNextStep}sec`];\n    }\n  }, [data, currentStep, untilNextStep]);\n\n  return (\n    <text\n      className={`${styles.countDownTimer}`}\n      textAnchor=\"middle\"\n      x={pieRadius}\n      y={pieRadius}\n      dy=\"-0.17em\"\n    >\n      <tspan>{isRunning ? displayText[0] : \"Push\"}</tspan>\n      <tspan x={pieRadius} dy=\"1em\">\n        {isRunning ? displayText[1] : \"Start\"}\n      </tspan>\n    </text>\n  );\n};\n","import { useMemo } from \"react\";\nimport { arc, pie } from \"d3\";\nimport { DonutChart } from \"./DonutChart\";\nimport { DonutNeedle } from \"./DonutNeedle\";\nimport { CountDownTimer } from \"./CountDownTimer\";\nimport styles from \"./DonutProgress.module.css\";\n\nconst width = window.innerWidth < 640 ? window.innerWidth * 0.6 : 640 * 0.6;\nconst height = width;\n\nconst pieRadius = width * 0.5;\nconst pieOuterMargin = pieRadius * 0.9;\nconst pieInnerMargin = pieRadius * 0.75;\n\nconst pieArc = arc().innerRadius(pieInnerMargin).outerRadius(pieOuterMargin);\nconst needleArc = arc()\n  .innerRadius(pieInnerMargin)\n  .outerRadius(pieInnerMargin - 10);\n\nconst dataValue = (d) => d.duration;\nconst needleValue = (d) => d.step;\n\nconst SvgRoundButton = () => (\n  <>\n    <defs>\n      <radialGradient id=\"grad1\" cx=\"50%\" cy=\"50%\" r=\"50%\" fx=\"60%\" fy=\"60%\">\n        <stop offset=\"0%\" style={{ stopColor: \"#3a3a3c\", stopOpacity: 1 }} />\n        <stop offset=\"85%\" style={{ stopColor: \"#3a3a3c\", stopOpacity: 1 }} />\n        <stop offset=\"100%\" style={{ stopColor: \"#48484a\", stopOpacity: 1 }} />\n      </radialGradient>\n    </defs>\n    <circle className={styles.button} cx=\"0\" cy=\"0\" r={pieInnerMargin - 13} />\n  </>\n);\n\nexport const DonutProgressContainer = ({\n  time,\n  data,\n  isRunning,\n  currentStep,\n  untilNextStep,\n}) => {\n  const totalDuration = useMemo(\n    () => data.reduce((pre, cur) => pre + cur.duration, 0),\n    [data]\n  );\n\n  let needleData = [];\n  for (let i = 0; i <= totalDuration; i++) {\n    needleData.push({ step: 1 });\n  }\n\n  const needlePie = useMemo(() => pie().sort(null).value(needleValue), []);\n  const colorPie = useMemo(() => pie().sort(null).value(dataValue), []);\n\n  return (\n    <>\n      <svg width={width} height={height}>\n        <g transform={`translate(${pieRadius},${height / 2})`}>\n          <DonutNeedle\n            time={time}\n            pieData={needleData}\n            colorPie={needlePie}\n            pieArc={needleArc}\n            dataValue={needleValue}\n          />\n          <DonutChart\n            pieData={data}\n            colorPie={colorPie}\n            pieArc={pieArc}\n            dataValue={dataValue}\n            currentStep={currentStep}\n          />\n          <SvgRoundButton />\n        </g>\n        <CountDownTimer\n          data={data}\n          currentStep={currentStep}\n          untilNextStep={untilNextStep}\n          pieRadius={pieRadius}\n          isRunning={isRunning}\n        />\n      </svg>\n    </>\n  );\n};\n","import { useEffect, useRef } from \"react\";\nimport { Steps } from \"../../../types/TypeBrewMethod\";\nimport { DonutProgressContainer } from \"./DonutProgressContainer\";\n\n// Typescript does not seem to support 'import' of audio files.\nconst bellAudioClip = require(\"../../../assets/bell.mp3\");\nconst silentAudioClip =\n  \"data:audio/mpeg;base64,suqzbaaaaaabevrywfgaaaataaady29tbwvudabcawdtb3vuzejhbmsuy29tic8gtgftb25vdghlcxvllm9yzwburu5daaaahqaaa1n3axrjacbqbhvzimkpie5dscbtb2z0d2fyzqbusvqyaaaabgaaaziymzuavfntrqaaaa8aaanmyxzmntcuodmumtawaaaaaaaaaaaaaad/80deaaaaa0gaaaaatefnrtmumtawvvvvvvvvvvvvvuxbtuuzljewmfvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvf/zqsrbaaadsaaaaabvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvf/zqmskaaadsaaaaabvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\";\n\nexport const DonutProgressChart = ({\n  time,\n  steps,\n  currentStep,\n  stepsLeft,\n  untilNextStep,\n  isRunning,\n  setIsRunning,\n}: {\n  time: number;\n  steps: Array<Steps>;\n  currentStep: number;\n  stepsLeft: number;\n  untilNextStep: number;\n  isRunning: boolean;\n  setIsRunning: React.Dispatch<React.SetStateAction<boolean>>;\n}) => {\n  // Initial audio element.\n  const audioRef = useRef<HTMLAudioElement>(new Audio());\n  audioRef.current.autoplay = true;\n\n  useEffect(() => {\n    if (stepsLeft > 0 && untilNextStep === 1) {\n      // Typescript requires '.default'\n      audioRef.current.src = bellAudioClip.default;\n      audioRef.current.play();\n    }\n  }, [stepsLeft, audioRef, untilNextStep]);\n  return (\n    <div\n      id=\"donutProgressChart\"\n      onClick={() => {\n        isRunning ? setIsRunning(false) : setIsRunning(true);\n        // Audio needs to be initiated by user interaction.\n        audioRef.current.src = silentAudioClip;\n      }}\n    >\n      <DonutProgressContainer\n        time={time}\n        data={steps}\n        isRunning={isRunning}\n        currentStep={currentStep}\n        untilNextStep={untilNextStep}\n      />\n    </div>\n  );\n};\n","import { Steps } from \"../../../types/TypeBrewMethod\";\nimport styles from \"./StepsList.module.css\";\nexport const StepsList = ({\n  steps,\n  currentStep,\n  isRunning,\n}: {\n  steps: Array<Steps>;\n  isRunning: boolean;\n  currentStep: number;\n}) => {\n  return (\n    <>\n      <div className={styles.scrollable}>\n        <h4 className={styles.heading}>Steps</h4>\n        <ul className=\"item-lists\">\n          {!isRunning ? (\n            steps.map((step, index) => (\n              <li className=\"list-item\" key={index}>\n                <span className={styles.timeGuide}>\n                  {step.duration} second{step.duration > 1 ? \"s\" : \"\"}\n                </span>\n                <span\n                  className={`${styles.instruction} ${\n                    index === currentStep - 1 && styles.activeText\n                  }\n                  }`}\n                >\n                  {step.instruction}\n                </span>\n              </li>\n            ))\n          ) : (\n            <>\n              <li className=\"list-item\">\n                <span className={styles.timeGuide}>Do</span>\n                <span className={styles.activeText}>\n                  {steps[currentStep - 1].instruction}\n                </span>\n              </li>\n              {steps[currentStep] && (\n                <li className=\"list-item\">\n                  <span className={styles.timeGuide}>Next Up</span>\n                  <span className={styles.instruction}>\n                    {steps[currentStep].instruction}\n                  </span>\n                </li>\n              )}\n            </>\n          )}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import styles from \"./Stopwatch.module.css\";\nexport const Stopwatch = ({\n  time,\n}: // isRunning,\n// setIsRunning,\n{\n  time: number;\n  isRunning: boolean;\n  setIsRunning: React.Dispatch<React.SetStateAction<boolean>>;\n}) => {\n  const minutes = (\"0\" + Math.floor((time / 60) % 60)).toString().slice(-2);\n  const seconds = (\"0\" + Math.floor(time % 60)).toString().slice(-2);\n  return (\n    <div id=\"stopwatch\">\n      <div className={`digits ${styles.clock}`}>\n        <span>{minutes}:</span>\n        <span>{seconds}</span>\n      </div>\n\n      {/* <div id=\"stopwatch_controls\"> */}\n      {/*   <button */}\n      {/*     className={ */}\n      {/*       isRunning */}\n      {/*         ? `${styles.onOffButton} ${styles.active}` */}\n      {/*         : styles.onOffButton */}\n      {/*     } */}\n      {/*     onClick={ */}\n      {/*       isRunning ? () => setIsRunning(false) : () => setIsRunning(true) */}\n      {/*     } */}\n      {/*   > */}\n      {/*     Go */}\n      {/*   </button> */}\n      {/* </div> */}\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { TypeBrewMethod } from \"../../types/TypeBrewMethod\";\nimport { DonutProgressChart } from \"./DonutProgressChart\";\nimport { StepsList } from \"./StepList\";\nimport { Stopwatch } from \"./Stopwatch\";\n\nexport const InstructionView = ({\n  methodDetails,\n  water,\n  isReady,\n  setIsReady,\n}: {\n  methodDetails: TypeBrewMethod;\n  beanWeight: number;\n  water: number;\n  isReady: boolean;\n  setIsReady: Function;\n}) => {\n  const [time, setTime] = useState<number>(0);\n  const [currentStep, setCurrentStep] = useState<number>(1);\n  const [untilNextStep, setUntilNextStep] = useState<number>(\n    methodDetails.steps[0].duration\n  );\n  const [isRunning, setIsRunning] = useState<boolean>(false);\n\n  const calculatedSteps = methodDetails.steps.map((step) => {\n    return {\n      ...step,\n      instruction: step.instruction.replace(\n        /\\{([^]+)\\}/,\n        ($0: string, $1: string) => Math.round(+$1 * water).toString()\n      ),\n    };\n  });\n\n  const stepsLeft = calculatedSteps.length - currentStep;\n  useEffect(() => {\n    let interval: number = 0;\n    if (isRunning) {\n      interval = window.setInterval(() => {\n        setTime((prevTime) => prevTime + 1);\n        if (untilNextStep > 0) setUntilNextStep(untilNextStep - 1);\n        if (stepsLeft > 0 && untilNextStep === 1) {\n          setCurrentStep((prevOrder) => prevOrder + 1);\n          setUntilNextStep(calculatedSteps[currentStep].duration);\n        }\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, untilNextStep, currentStep, calculatedSteps, stepsLeft]);\n  return (\n    <div className={`slider ${!isReady && \"close\"}`}>\n      <div className=\"topnav\">\n        <h3 className=\"nav_heading absolute_center\">{methodDetails.method}</h3>\n        <button\n          className=\"nav-btn\"\n          onClick={() => {\n            setIsReady(false);\n            setIsRunning(false);\n            setTime(0);\n            setCurrentStep(1);\n            setUntilNextStep(methodDetails.steps[0].duration);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      <Stopwatch\n        time={time}\n        isRunning={isRunning}\n        setIsRunning={setIsRunning}\n      />\n      <DonutProgressChart\n        time={time}\n        steps={calculatedSteps}\n        currentStep={currentStep}\n        stepsLeft={stepsLeft}\n        untilNextStep={untilNextStep}\n        isRunning={isRunning}\n        setIsRunning={setIsRunning}\n      />\n      <StepsList\n        isRunning={isRunning}\n        steps={calculatedSteps}\n        currentStep={currentStep}\n      />\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { GetReadyView } from \"./views/GetReadyView\";\nimport { InstructionView } from \"./views/InstructionView\";\nimport brewMethods from \"./data/BrewMethods.json\";\nimport \"./App.css\";\n\nfunction App() {\n  const [method, setMethod] = useState(\"The Ultimate V60\");\n  const [isReady, setIsReady] = useState<boolean>(false);\n  const chosenMethodDetails = brewMethods.find((obj) => obj.method === method);\n  const [beanWeight, setBeanWeight] = useState(\n    chosenMethodDetails!.defaultCoffeeInGram\n  );\n  const [water, setWater] = useState(chosenMethodDetails!.defaultWaterInMl);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"app-title\">Coffee Crush</h1>\n      </header>\n\n      <GetReadyView\n        method={method}\n        setMethod={setMethod}\n        isReady={isReady}\n        setIsReady={setIsReady}\n        chosenMethodDetails={chosenMethodDetails!}\n        beanWeight={beanWeight}\n        setBeanWeight={setBeanWeight}\n        water={water}\n        setWater={setWater}\n      />\n\n      <InstructionView\n        methodDetails={chosenMethodDetails!}\n        beanWeight={beanWeight}\n        water={water}\n        isReady={isReady}\n        setIsReady={setIsReady}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}